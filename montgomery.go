package schnorrq

var (
	order = [32]byte{

		0x00, 0x29, 0xCB, 0xC1, 0x4E, 0x5E, 0x0A, 0x72,
		0xF0, 0x53, 0x97, 0x82, 0x9C, 0xBC, 0x14, 0xE5,
		0xDF, 0xBD, 0x00, 0x4D, 0xFE, 0x0F, 0x79, 0x99,
		0x2F, 0xB2, 0x54, 0x0E, 0xC7, 0x76, 0x8C, 0xE7,
	}

	smallRPrime = [32]byte{
		0xF3, 0x27, 0x02, 0xFD, 0xAF, 0xC1, 0xC0, 0x74,
		0xBC, 0xE4, 0x09, 0xED, 0x76, 0xB5, 0xDB, 0x21,
		0xD7, 0x5E, 0x78, 0xB8, 0xD1, 0xFC, 0xDC, 0xF3,
		0xE1, 0x2F, 0xE5, 0xF0, 0x79, 0xBC, 0x39, 0x29,
	}

	bigRPrime = [32]byte{
		0x00, 0x06, 0xA5, 0xF1, 0x6A, 0xC8, 0xF9, 0xD3,
		0x3D, 0x01, 0xB7, 0xC7, 0x21, 0x36, 0xF6, 0x1C,
		0x17, 0x3E, 0xA5, 0xAA, 0xEA, 0x6B, 0x38, 0x7D,
		0xC8, 0x1D, 0xB8, 0x79, 0x5F, 0xF3, 0xD6, 0x21,
	}
)

// multiply mc = ma*mb*r' mod order
func multiply(ma, mb []byte) []byte {

	return nil
	//return r.Bytes()
}
